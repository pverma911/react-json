[{"C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\index.js":"1","C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\App.js":"3","C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\Form.js":"4","C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\final_UPA.js":"5","C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\UserProjectAssignment.js":"6","C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\Dropdowns.js":"7","C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\Multiple.js":"8","C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\MaterialMultiple.js":"9","C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\Test.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1502,"mtime":1607409523638,"results":"14","hashOfConfig":"12"},{"size":6404,"mtime":1607410510044,"results":"15","hashOfConfig":"12"},{"size":663,"mtime":1607406110859,"results":"16","hashOfConfig":"12"},{"size":3081,"mtime":1607406066615,"results":"17","hashOfConfig":"12"},{"size":3843,"mtime":1607324867916,"results":"18","hashOfConfig":"12"},{"size":1218,"mtime":1607407016241,"results":"19","hashOfConfig":"12"},{"size":3325,"mtime":1607333261489,"results":"20","hashOfConfig":"12"},{"size":290,"mtime":1607407891100,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"19yl9wm",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\index.js",[],["45","46"],"C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\App.js",[],"C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\Form.js",[],"C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\final_UPA.js",[],"C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\UserProjectAssignment.js",["47","48","49","50"],"C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\Dropdowns.js",["51","52","53","54","55","56","57"],"import React,{useState,useEffect} from 'react';\n// import { Route } from 'react-router-dom';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText'; \nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://ec2-15-206-73-236.ap-south-1.compute.amazonaws.com:5000/'\n})\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst names = [\n  'Oliver Hansen',\n  'Van Henry',\n  'April Tucker',\n  'Ralph Hubbard',\n  'Omar Alexander',\n  'Carlos Abbott',\n  'Miriam Wagner',\n  'Bradley Wilkerson',\n  'Virginia Andrews',\n  'Kelly Snyder',\n];\n\nfunction getStyles(name, personName, theme) {\n  return {\n    fontWeight:\n      personName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nfunction MultipleSelect() {\n  const [data, setData] = useState([]);\n  const [iserror, setIserror] = useState(false);\n  const [errorMessages, setErrorMessages] = useState([]);\n\n  useEffect(() => {\n    api.get(\"/sites\")\n    .then(res =>{\n      setData(res.data.data)\n    })\n    .catch(error => {\n      console.log(\"Error\")\n    } )\n\n  },[])\n  \n  const classes = useStyles();\n  const theme = useTheme();\n  const [personName, setPersonName] = React.useState([]);\n\n  const handleChange = (event) => {\n    setPersonName(event.target.value);\n  };\n  \n  const handleChangeMultiple = (event) => {\n    const { options } = event.target;\n    const value = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    setPersonName(value);\n  };\n\n  return (\n    <div>\n          <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-mutiple-name-label\" >Name</InputLabel>\n        <Select\n          labelId=\"demo-mutiple-name-label\"\n          id=\"demo-mutiple-name\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input />}\n          MenuProps={MenuProps}\n        >\n          {names.map((name) => (\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\n              {name}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-mutiple-checkbox-label\">Select Site</InputLabel>\n        <Select\n          labelId=\"demo-mutiple-checkbox-label\"\n          id=\"demo-mutiple-checkbox\"\n          multiple\n          value={personName}\n          onChange={handleChange}\n          input={<Input />}\n          renderValue={(selected) => selected.join(', ')}\n          MenuProps={MenuProps}\n        >\n          {data.map(({ site_id, site_name }) => (\n            <MenuItem key={site_id} value={site_name}>\n              <Checkbox checked={personName.indexOf(site_id) > -1} />\n              <ListItemText primary={site_name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n \nexport default MultipleSelect","C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\Multiple.js",[],"C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\MaterialMultiple.js",["58","59","60","61","62","63"],"import React, {useEffect, useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'http://ec2-15-206-73-236.ap-south-1.compute.amazonaws.com:5000/'\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    maxWidth: 300,\r\n  },\r\n  chips: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\r\n  'Oliver Hansen',\r\n  'Van Henry',\r\n  'April Tucker',\r\n  'Ralph Hubbard',\r\n  'Omar Alexander',\r\n  'Carlos Abbott',\r\n  'Miriam Wagner',\r\n  'Bradley Wilkerson',\r\n  'Virginia Andrews',\r\n  'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nexport default function MultipleSelect(props) {\r\n    const [data,setData] = useState([]);\r\n    useEffect(() => {\r\n        api.get(\"/sites\")\r\n        .then(res =>{\r\n        setData(res.data.data)\r\n        })\r\n        .catch(error => {\r\n        console.log(\"Error\")\r\n        } )\r\n\r\n    },[])\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setPersonName(event.target.value);\r\n    // props.onChange({ [event.target.name]: event.target.value })\r\n  };\r\n\r\n  const handleChangeMultiple = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <h1> Select Name </h1>\r\n      \r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel id=\"demo-mutiple-checkbox-label\">Name</InputLabel>\r\n        <Select\r\n         \r\n          labelId=\"demo-mutiple-checkbox-label\"\r\n          id=\"demo-mutiple-checkbox\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChange}\r\n          input={<Input />}\r\n          renderValue={(selected) => selected.join(', ')}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name} >\r\n              <Checkbox checked={personName.indexOf(name) > -1} />\r\n              <ListItemText primary={name} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n     \r\n    </div>\r\n  );\r\n}","C:\\Users\\Family\\Desktop\\react-app\\my-app\\src\\Test.js",["64"],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":24,"nodeType":"71","messageId":"72","endLine":1,"endColumn":33},{"ruleId":"69","severity":1,"message":"73","line":2,"column":9,"nodeType":"71","messageId":"72","endLine":2,"endColumn":26},{"ruleId":"69","severity":1,"message":"74","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":13},{"ruleId":"69","severity":1,"message":"75","line":35,"column":20,"nodeType":"71","messageId":"72","endLine":35,"endColumn":32},{"ruleId":"69","severity":1,"message":"76","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":12},{"ruleId":"69","severity":1,"message":"77","line":12,"column":8,"nodeType":"71","messageId":"72","endLine":12,"endColumn":12},{"ruleId":"69","severity":1,"message":"78","line":73,"column":10,"nodeType":"71","messageId":"72","endLine":73,"endColumn":17},{"ruleId":"69","severity":1,"message":"79","line":73,"column":19,"nodeType":"71","messageId":"72","endLine":73,"endColumn":29},{"ruleId":"69","severity":1,"message":"80","line":74,"column":10,"nodeType":"71","messageId":"72","endLine":74,"endColumn":23},{"ruleId":"69","severity":1,"message":"81","line":74,"column":25,"nodeType":"71","messageId":"72","endLine":74,"endColumn":41},{"ruleId":"69","severity":1,"message":"82","line":95,"column":9,"nodeType":"71","messageId":"72","endLine":95,"endColumn":29},{"ruleId":"69","severity":1,"message":"76","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":12},{"ruleId":"69","severity":1,"message":"77","line":11,"column":8,"nodeType":"71","messageId":"72","endLine":11,"endColumn":12},{"ruleId":"69","severity":1,"message":"83","line":60,"column":10,"nodeType":"71","messageId":"72","endLine":60,"endColumn":19},{"ruleId":"69","severity":1,"message":"84","line":70,"column":12,"nodeType":"71","messageId":"72","endLine":70,"endColumn":16},{"ruleId":"69","severity":1,"message":"85","line":82,"column":9,"nodeType":"71","messageId":"72","endLine":82,"endColumn":14},{"ruleId":"69","severity":1,"message":"82","line":90,"column":9,"nodeType":"71","messageId":"72","endLine":90,"endColumn":29},{"ruleId":"69","severity":1,"message":"86","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'componentDidMount' is defined but never used.","'Table' is defined but never used.","'setIsChecked' is assigned a value but never used.","'clsx' is defined but never used.","'Chip' is defined but never used.","'iserror' is assigned a value but never used.","'setIserror' is assigned a value but never used.","'errorMessages' is assigned a value but never used.","'setErrorMessages' is assigned a value but never used.","'handleChangeMultiple' is assigned a value but never used.","'getStyles' is defined but never used.","'data' is assigned a value but never used.","'theme' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]